{"version":3,"sources":["candy-machine.ts","Home.tsx","Mint.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CANDY_MACHINE_PROGRAM","anchor","PublicKey","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","a","commitment","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","onSignature","result","context","e","error","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","preflightCommitment","fetchIdl","idl","program","candyMachine","id","account","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","goLiveDate","Date","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getTokenWallet","wallet","mintOneToken","config","treasury","Keypair","generate","publicKey","token","metadata","masterEdition","getMinimumBalanceForRentExemption","MintLayout","span","rent","rpc","mintNft","accounts","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","clock","SYSVAR_CLOCK_PUBKEY","signers","instructions","createAccount","fromPubkey","newAccountPubkey","space","lamports","Token","createInitMintInstruction","createMintToInstruction","shortenAddress","address","chars","slice","ms","Home","useEffect","items","document","querySelectorAll","isElementInViewport","el","rect","getBoundingClientRect","top","left","bottom","window","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","callbackFunc","i","length","classList","add","addEventListener","className","src","alt","href","type","onClick","open","ConnectButton","styled","WalletDialogButton","CounterText","MintContainer","div","renderCounter","days","hours","minutes","seconds","completed","props","useState","balance","setBalance","isActive","setIsActive","isSoldOut","setIsSoldOut","isMinting","setIsMinting","setItemsAvailable","setItemsRedeemed","setItemsRemaining","message","severity","undefined","alertState","setAlertState","startDate","setStartDate","useAnchorWallet","setCandyMachine","refreshCandyMachineState","onMint","mintTxId","txTimeout","msg","code","indexOf","getBalance","LAMPORTS_PER_SOL","toBase58","toLocaleString","disabled","date","onMount","onComplete","renderer","tabIndex","getElementById","click","Snackbar","autoHideDuration","onClose","Alert","process","network","Connection","startDateSeed","parseInt","theme","createTheme","palette","overrides","MuiButtonBase","root","justifyContent","MuiButton","textTransform","padding","startIcon","marginRight","endIcon","marginLeft","App","endpoint","useMemo","clusterApiUrl","wallets","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","ThemeProvider","autoConnect","path","element","Mint","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","target","rel","to"],"mappings":"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","file":"static/js/main.1a514b4b.chunk.js","sourcesContent":["import * as anchor from \"@project-serum/anchor\";\n\nimport {\n  MintLayout,\n  TOKEN_PROGRAM_ID,\n  Token,\n} from \"@solana/spl-token\";\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  \"cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ\"\n);\n\nconst SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\"\n);\n\nexport interface CandyMachine {\n  id: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection;\n  program: anchor.Program;\n}\n\ninterface CandyMachineState {\n  candyMachine: CandyMachine;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  goLiveDate: Date,\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = \"recent\",\n  queryStatus = false\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log(\"Rejecting for timeout...\");\n      reject({ timeout: true });\n    }, timeout);\n    try {\n      subId = connection.onSignature(\n        txid,\n        (result: any, context: any) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if (result.err) {\n            console.log(\"Rejected via websocket\", result.err);\n            reject(status);\n          } else {\n            console.log(\"Resolved via websocket\", result);\n            resolve(status);\n          }\n        },\n        commitment\n      );\n    } catch (e) {\n      done = true;\n      console.error(\"WS error in setup\", txid, e);\n    }\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log(\"REST null result for\", txid, status);\n            } else if (status.err) {\n              console.log(\"REST error for\", txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log(\"REST no confirmations for\", txid, status);\n            } else {\n              console.log(\"REST confirmation for\", txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log(\"REST connection error: txid\", txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log(\"Returning status\", status);\n  return status;\n}\n\n/* export */ const createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineState> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: \"recent\",\n  });\n\n  const idl = await anchor.Program.fetchIdl(\n    CANDY_MACHINE_PROGRAM,\n    provider\n  );\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n  const candyMachine = {\n    id: candyMachineId,\n    connection,\n    program,\n  }\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  let goLiveDate = state.data.goLiveDate.toNumber();\n  goLiveDate = new Date(goLiveDate * 1000);\n\n  console.log({\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  })\n\n  return {\n    candyMachine,\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  };\n}\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from(\"edition\"),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getTokenWallet = async (\n  wallet: anchor.web3.PublicKey,\n  mint: anchor.web3.PublicKey\n) => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [wallet.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n      SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachine,\n  config: anchor.web3.PublicKey, // feels like this should be part of candyMachine?\n  payer: anchor.web3.PublicKey,\n  treasury: anchor.web3.PublicKey,\n): Promise<string> => {\n  const mint = anchor.web3.Keypair.generate();\n  const token = await getTokenWallet(payer, mint.publicKey);\n  const { connection, program } = candyMachine;\n  const metadata = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const rent = await connection.getMinimumBalanceForRentExemption(\n    MintLayout.span\n  );\n\n  return await program.rpc.mintNft({\n    accounts: {\n      config,\n      candyMachine: candyMachine.id,\n      payer: payer,\n      wallet: treasury,\n      mint: mint.publicKey,\n      metadata,\n      masterEdition,\n      mintAuthority: payer,\n      updateAuthority: payer,\n      tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n    },\n    signers: [mint],\n    instructions: [\n      anchor.web3.SystemProgram.createAccount({\n        fromPubkey: payer,\n        newAccountPubkey: mint.publicKey,\n        space: MintLayout.span,\n        lamports: rent,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n      Token.createInitMintInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        0,\n        payer,\n        payer\n      ),\n      createAssociatedTokenAccountInstruction(\n        token,\n        payer,\n        payer,\n        mint.publicKey\n      ),\n      Token.createMintToInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        token,\n        payer,\n        [],\n        1\n      ),\n    ],\n  });\n}\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}","import { useEffect } from 'react'\n\nconst Home = () => {\n  useEffect(() => {\n    // define variables\n    const items = document.querySelectorAll('.timeline li, .scroll-in-animate')\n\n    // check if an element is in viewport\n    // http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\n    function isElementInViewport(el: any) {\n      var rect = el.getBoundingClientRect()\n      return (\n        rect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n      )\n    }\n\n    function callbackFunc() {\n      for (var i = 0; i < items.length; i++) {\n        if (isElementInViewport(items[i])) {\n          items[i].classList.add('in-view')\n        }\n      }\n    }\n\n    // listen for events\n    window.addEventListener('load', callbackFunc)\n    window.addEventListener('resize', callbackFunc)\n    window.addEventListener('scroll', callbackFunc)\n  }, [])\n\n  return (\n    <main>\n      <section className=\"intro fancy circle-in\">\n        <div className=\"logo\">\n          <img src=\"/assets/images/logo.png\" alt=\"Solcoins Solanart NFT Logo play to earn \" />\n        </div>\n        <div className=\"limited flex flex-justify\">\n          <div className=\"info\">\n            <h1>FIND YOUR SOLCOIN</h1>\n            <p className=\"medium\">\n              You may be wondering if it’s art or money? It’s Solcoin. 4501 exist... only on the Solana blockchain.\n            </p>\n            <div className=\"fp-email\">\n              <div>\n                <a href=\"https://gleam.io/1z5FH/solcoins-treasure-hunt\">\n                  <button type=\"button\" className=\"go-home-btn\">\n                    CLICK HERE TO DIG FOR TREASURE\n                  </button>\n                </a>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"example hop-in\">\n            <img src=\"/assets/images/examples/main.png\" alt=\"Solcoins Solana art NFT Sol coins not solchicks\" />\n          </div>\n\n          <div className=\"banner flex-center flex-justify\">\n            <p className=\"medium\">See how it all began...</p>\n            <button\n              onClick={() => {\n                window.open('/assets/origin-story.pdf#zoom=300', '_blank')\n              }}\n            >\n              Read the Origin Story\n            </button>\n          </div>\n        </div>\n      </section>\n\n      {/* <section className=\"about\">\n      <div className=\"limited flex-center flex-justify flex\">\n        <div className=\"info\">\n          <h2>About Solcoins</h2>\n          <p className=\"medium\">Solcoins are handcrafted with love from the engulfing flames of Solana. Only 4501 Solcoins can\n            possibly exist.</p>\n        </div>\n        <div className=\"example\">\n          <img src=\"/assets/images/examples/1.png\" alt=\"Solana Crypto NFT Solcoins Example\" />\n        </div>\n      </div>\n      </div>\n    </section> */}\n      <section className=\"about\">\n        <div className=\"limited flex-center flex-justify flex-revert\">\n          <div className=\"info\">\n            <h2>ABOUT SOLCOINS</h2>\n            <p className=\"medium\">\n              Solcoins are a uniquely honest collection of artistic NFTs on the Solana Blockchain. Forged in the\n              engulfing flames of Solana, 4501 will exist but they’ll have to be dug up (minted) by you, the community.\n              1000 SOL goes to the Solcoins community. Solcoins is designed to be taken over by the community.\n            </p>\n          </div>\n          <div className=\"example scroll-in-animate envelope-in\">\n            <img src=\"/assets/images/examples/4.png\" alt=\"Solcoins Solana art NFT Sol coins not solchicks\" />\n          </div>\n        </div>\n      </section>\n      <section className=\"prizing\">\n        <div className=\"limited flex-center flex-justify flex-revert\">\n          <div className=\"info\">\n            <h2>Prizing</h2>\n            <div className=\"medium\">\n              <ol>\n                <li>300 SOL will be sent to the minter of the 1 of 1 Genesis Solcoin!</li>\n                <li>200 SOL (8 SOL each) will be sent to the 25 winning Solcoin treasure diggers!</li>\n                <li>500 SOL (20 SOL each) will be sent to the 25 Solcoin owners of the winning treasure digs!</li>\n              </ol>\n            </div>\n            <p className=\"medium\">\n              Note: Prizing is based on the assumption that all 4501 Solcoins are minted. If less than 4501 Solcoins are\n              minted, then prizing will be prorated based on the number of minted Solcoins. Example: If only 4000 of\n              4501 Solcoins are minted (88.8%) then total prizing will be 88.8% of the amounts listed above.\n            </p>\n          </div>\n          <div className=\"example scroll-in-animate envelope-in\">\n            <img src=\"/assets/images/examples/2.png\" alt=\"Solana Crypto NFT Solcoins Example\" />\n          </div>\n        </div>\n      </section>\n      <section className=\"who-are-we\">\n        <div className=\"limited flex-center flex-justify flex\">\n          <div className=\"info\">\n            <h2>WHO ARE WE?</h2>\n            <p className=\"medium\">\n              A rowdy group of storytellers, gamers, artists, coders, traders and nerds who have been experimenting in\n              the crypto space since 2017. We’ve worked on projects like Panda Dynasty, Republic, and Enjin (among many\n              others) and have a diverse range of experience working with legendary companies like Riot Games and\n              Tencent. Some of us have worked on startups, others at major tech companies; some have worked on Wall\n              Street and one of us has only ever worked in their mom's basement (no shame). <br /> <br />\n              What brought us all together is simple: the Metaverse is coming fast, and we want to be part of it. We\n              want to meet other people who feel the same way. We want to network with anyone who wants to be part of\n              building the future. Solcoins is just the beginning for us.\n            </p>\n          </div>\n          <div className=\"example scroll-in-animate envelope-in\">\n            <img src=\"/assets/images/examples/1.png\" alt=\"Solcoins Solana art NFT Sol coin not solchicks\" />\n          </div>\n        </div>\n      </section>\n      <section className=\"prizing\">\n        <div className=\"limited flex-center flex-justify flex-revert\">\n          <div className=\"info\">\n            <h2>WHAT DO WE WANT?</h2>\n            <p className=\"medium\">\n              To build a community of crypto-enthusiasts and NFT lovers who are psyched about the Metaverse and who want\n              to meet other like-minded folk so that together they can learn, grow, and hopefully do more than just\n              stand on the side-lines watching the future being built. We want to build the future. If that sounds like\n              you, then we want to hear your story. Join us in discord and be part of the revolution. If you want to be\n              part of what comes next, then sharpen your shovels and get ready to dig for Solcoins, because it’s going\n              to be up to you to decide what these are worth, and what comes next.\n            </p>\n            <br />\n            <p className=\"medium\">\n              We’re not here to convince you that Solcoins has invented the next crazy groundbreaking utility token or\n              technology; we’re not here to promise you a 300 feature, 5 year roadmap; we’re not going to make insane\n              claims like “Solcoins is a guaranteed win, you’re going to 10X on day 1!” or “Solcoins are going to be\n              used as the universal currency of Coachella, Burning Man, Solchicks AND THE ENTIRE METAVERSE” (although\n              that would be pretty cool and if enough people want it to happen it probably could). There are enough\n              projects trying to shill their fantasies to you and that is not what we are here to do. Solcoins are art\n              and Solcoins are money.{' '}\n            </p>\n            <br />\n            <p className=\"medium\">\n              <strong>Nothing more</strong> <u>for now</u>, <strong>nothing less</strong> <u>forever.</u> <br />\n              We’re letting the community take over Solcoins!\n            </p>\n          </div>\n          <div className=\"example scroll-in-animate envelope-in\">\n            <img src=\"/assets/images/examples/6.png\" alt=\"Solana Crypto NFT Solcoins Sol coins not solchicks\" />\n          </div>\n        </div>\n      </section>\n      <section className=\"treasure-hunt\">\n        <div className=\"limited flex-center flex-justify flex\">\n          <div className=\"info\">\n            <h2>I HEARD THERE'S A TREASURE HUNT?</h2>\n            <p className=\"medium\">\n              You’re damn right there’s a treasure hunt! A community treasure hunt! We’re giving 1000 SOL back to the\n              community <strong>immediately</strong>. Each Solcoin that you mint has a chance to be dug up by our\n              community of diggers. If your Solcoin is dug up, you will win 20 SOL.\n              <strong>\n                What’s even crazier is that if you mint the Genesis Coin (Solcoin#1) then YOU’LL WIN 400 SOL!\n              </strong>\n            </p>\n            <br />\n            <p className=\"medium\">\n              Anyone is eligible to dig, but <strong>only minters are eligible to win. </strong>\n              To join the treasure hunt and get yourself a nice sharp shovel all you have to do is engage with the\n              community.\n              <a href=\"https://discord.gg/45XTxdHzzB\"> Click here to get yourself some digs </a>\n            </p>\n            <br />\n            <p className=\"medium\">\n              For each task you complete on Gleam, you will earn 1 treasure dig. Each dig will give you the chance to\n              uncover a winning Solcoin. All digging will take place on our discord server using our Discord bot. We\n              will add new batches of diggers with each milestone throughout the sale (more info on the roadmap below).\n            </p>\n            <br />\n            <p className=\"medium\">\n              25 random treasure hunters will dig up a Solcoin and win. Each of the 25 hunters will win 8 SOL (200 SOL\n              total) for uncovering a Solcoin. Here comes the fun part! Each Solcoin that is dug up will also give the\n              Solcoin NFT owner a prize of 20 SOL (25 winners).\n            </p>\n            <br />\n            <p className=\"medium\">\n              <strong>\n                This means that if you dig up a Solcoin that you minted, you’ll win 28 SOL, that’s more than triple the\n                prize for just digging one up!\n              </strong>\n            </p>\n          </div>\n          <div className=\"example scroll-in-animate envelope-in\">\n            <img\n              src=\"/assets/images/examples/8.png\"\n              alt=\"Solana play to earn play-to-earn Crypto NFT Solcoins Example Stillnot Solchicks\"\n            />\n          </div>\n        </div>\n      </section>\n      <section className=\"how-much\">\n        <div className=\"limited flex-center flex-justify flex-revert\">\n          <div className=\"info\">\n            <h2>HOW MUCH?</h2>\n            <p className=\"medium\">\n              During minting each Solcoin will cost 0.6 SOL. After minting, Solcoins will cost what the community\n              decides they will cost. We’re committed to making Solcoins available on several different marketplaces,\n              we’re also committed to reinvesting revenue from the sale into marketing and partnerships. The rest is up\n              to you, tell your friends and tell your family. If people talk about it and they want the value to go up,\n              then the value will go up, it’s that simple. What you see is what you get.\n            </p>\n          </div>\n          <div className=\"example scroll-in-animate envelope-in\">\n            <img src=\"/assets/images/examples/7.png\" alt=\"Solana Crypto NFT Solcoins Sol coins solchiks Example\" />\n            {/* <!--NEED NEW IMAGE--> */}\n          </div>\n        </div>\n      </section>\n      <section className=\"when\">\n        <div className=\"limited flex-center flex-justify flex\">\n          <div className=\"info\">\n            <h2>WHEN?</h2>\n            <p className=\"medium\">Minting is live! Minting will continue until 4501 Solcoins have been discovered.</p>\n          </div>\n          <div className=\"example scroll-in-animate envelope-in\">\n            <img src=\"/assets/images/examples/9.png\" alt=\"Solana Crypto NFT Solcoins Example\" />\n            {/* <!--NEED NEW IMAGE--> */}\n          </div>\n        </div>\n      </section>\n      <section className=\"where\">\n        <div className=\"limited flex-center flex-justify flex-revert\">\n          <div className=\"info\">\n            <h2>WHERE?</h2>\n            <p className=\"medium\">\n              Minting will take place directly on solcoins.io and nowhere else. After minting, the collection will be\n              listed on several marketplaces starting with Digital Eyes and Magic Eden.\n            </p>\n            <br />\n            <p className=\"medium\">\n              <a href=\"/mint\"> Click here to mint Solcoins! </a>\n            </p>\n          </div>\n          <div className=\"example scroll-in-animate envelope-in\">\n            <img src=\"/assets/images/examples/5.png\" alt=\"NFT Art Solcoins Solanart\" />\n          </div>\n        </div>\n      </section>\n      <section className=\"roadmap\">\n        <div className=\"limited flex-center flex-justify flex\">\n          <div className=\"info\">\n            <h2>COMMUNITY ROADMAP</h2>\n          </div>\n        </div>\n      </section>\n      <section className=\"timeline parallax\">\n        <ul>\n          <li>\n            <div>\n              <time>10%</time>\n              <p className=\"medium\">• Airdrop NFTs to the top 10 most engaged community members on our discord</p>\n              <p className=\"medium\">• Listing on Rarity Tools and other NFT calendars</p>\n            </div>\n          </li>\n          <li>\n            <div>\n              <time>25%</time>\n              <p className=\"medium\">• Ramp up marketing with two new project collabs</p>\n              <p className=\"medium\">• Second wave of diggers added</p>\n            </div>\n          </li>\n          <li>\n            <div>\n              <time>50%</time>\n              <p className=\"medium\">• Shovel sharpening</p>\n              <p className=\"medium\">• Third wave of diggers added</p>\n              <p className=\"medium\">• 5 lucky holders will be airdropped a Solcoin NFT</p>\n            </div>\n          </li>\n          <li>\n            <div>\n              <time>75%</time>\n              <p className=\"medium\">• Final round of diggers added</p>\n              <p className=\"medium\">• Dig acquisition closes</p>\n            </div>\n          </li>\n          <li>\n            <div>\n              <time>100%</time>\n              <p className=\"medium\">• Prizes distributed to all winners</p>\n              <p className=\"medium\">• Private channel created for holders</p>\n              <p className=\"medium\">• Surprise SOL drop</p>\n            </div>\n          </li>\n        </ul>\n      </section>\n\n      <section className=\"prizing\">\n        <div className=\"limited flex-center flex-justify flex-revert\">\n          <div className=\"info\">\n            <h2>Prizing</h2>\n            <div className=\"medium\">\n              <ol>\n                <li>300 SOL will be sent to the minter of the 1 of 1 Genesis Solcoin!</li>\n                <li>200 SOL (8 SOL each) will be sent to the 25 winning Solcoin treasure diggers!</li>\n                <li>500 SOL (20 SOL each) will be sent to the 25 Solcoin owners of the winning treasure digs!</li>\n              </ol>\n            </div>\n            <p className=\"medium\">\n              Note: Prizing is based on the assumption that all 4501 Solcoins are minted. If less than 4501 Solcoins are\n              minted, then prizing will be prorated based on the number of minted Solcoins. Example: If only 4000 of\n              4501 Solcoins are minted (88.8%) then total prizing will be 88.8% of the amounts listed above.\n            </p>\n          </div>\n          <div className=\"example scroll-in-animate envelope-in\">\n            <img src=\"/assets/images/examples/2.png\" alt=\"Solana Crypto NFT Solcoins Example\" />\n          </div>\n        </div>\n      </section>\n\n      <section className=\"layers\">\n        <div className=\"limited flex-center flex-justify flex\">\n          <div className=\"info\">\n            <h2>LAYERS</h2>\n            <p className=\"medium\">\n              Each Solcoin has between 6 and 14 layers. Solcoins are generated from 240 attributes. Some attributes will\n              only be available on 1 Solcoin. <strong>The rest is a secret, get excited!</strong>\n            </p>\n          </div>\n          <div className=\"example scroll-in-animate envelope-in\">\n            <img src=\"/assets/images/examples/3.png\" alt=\"Solcoins Solana NFT Art Example\" />\n          </div>\n          <div className=\"banner flex-center flex-justify\">\n            <p className=\"medium\">Want to dig for treasure?</p>\n            <a href=\"https://gleam.io/1z5FH/solcoins-treasure-hunt\">\n              <button type=\"button\">Dig for Treasure</button>\n            </a>\n          </div>\n        </div>\n      </section>\n    </main>\n  )\n}\n\nexport default Home\n","import { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport Countdown from 'react-countdown'\nimport { Snackbar } from '@material-ui/core'\nimport Alert from '@material-ui/lab/Alert'\n\nimport * as anchor from '@project-serum/anchor'\n\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js'\n\nimport { useAnchorWallet } from '@solana/wallet-adapter-react'\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui'\n\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from './candy-machine'\n\nconst ConnectButton = styled(WalletDialogButton)``\n\nconst CounterText = styled.span`` // add your styles here\n\nconst MintContainer = styled.div`\n  text-align: center;\n` // add your styles here\n\nexport interface HomeProps {\n  candyMachineId: anchor.web3.PublicKey\n  config: anchor.web3.PublicKey\n  connection: anchor.web3.Connection\n  startDate: number\n  treasury: anchor.web3.PublicKey\n  txTimeout: number\n}\n\nconst Home = (props: HomeProps) => {\n  const [balance, setBalance] = useState<number>()\n  const [isActive, setIsActive] = useState(false) // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false) // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false) // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0)\n  const [itemsRedeemed, setItemsRedeemed] = useState(0)\n  const [itemsRemaining, setItemsRemaining] = useState(0)\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: '',\n    severity: undefined,\n  })\n\n  const [startDate, setStartDate] = useState(new Date(props.startDate))\n\n  const wallet = useAnchorWallet()\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>()\n\n  const refreshCandyMachineState = () => {\n    ;(async () => {\n      if (!wallet) return\n\n      const { candyMachine, goLiveDate, itemsAvailable, itemsRemaining, itemsRedeemed } = await getCandyMachineState(\n        wallet as anchor.Wallet,\n        props.candyMachineId,\n        props.connection\n      )\n\n      setItemsAvailable(itemsAvailable)\n      setItemsRemaining(itemsRemaining)\n      setItemsRedeemed(itemsRedeemed)\n\n      setIsSoldOut(itemsRemaining === 0)\n      setStartDate(goLiveDate)\n      setCandyMachine(candyMachine)\n    })()\n  }\n\n  const onMint = async () => {\n    try {\n      setIsMinting(true)\n      if (wallet && candyMachine?.program) {\n        const mintTxId = await mintOneToken(candyMachine, props.config, wallet.publicKey, props.treasury)\n\n        const status = await awaitTransactionSignatureConfirmation(\n          mintTxId,\n          props.txTimeout,\n          props.connection,\n          'singleGossip',\n          false\n        )\n\n        if (!status?.err) {\n          setAlertState({\n            open: true,\n            message: 'Congratulations! Minting Successful!',\n            severity: 'success',\n          })\n        } else {\n          setAlertState({\n            open: true,\n            message: 'Mint failed! Please try again!',\n            severity: 'error',\n          })\n        }\n      }\n    } catch (error: any) {\n      // TODO: blech:\n      let message = error.msg || 'Minting failed! Please try again!'\n      if (!error.msg) {\n        if (error.message.indexOf('0x138')) {\n        } else if (error.message.indexOf('0x137')) {\n          message = `SOLD OUT!`\n        } else if (error.message.indexOf('0x135')) {\n          message = `Insufficient funds to mint. Please fund your wallet.`\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`\n          setIsSoldOut(true)\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: 'error',\n      })\n    } finally {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey)\n        setBalance(balance / LAMPORTS_PER_SOL)\n      }\n      setIsMinting(false)\n      refreshCandyMachineState()\n    }\n  }\n\n  useEffect(() => {\n    ;(async () => {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey)\n        setBalance(balance / LAMPORTS_PER_SOL)\n      }\n    })()\n  }, [wallet, props.connection])\n\n  useEffect(refreshCandyMachineState, [wallet, props.candyMachineId, props.connection])\n\n  useEffect(() => {\n    // define variables\n    const items = document.querySelectorAll('.timeline li, .scroll-in-animate')\n\n    // check if an element is in viewport\n    // http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\n    function isElementInViewport(el: any) {\n      var rect = el.getBoundingClientRect()\n      return (\n        rect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n      )\n    }\n\n    function callbackFunc() {\n      for (var i = 0; i < items.length; i++) {\n        if (isElementInViewport(items[i])) {\n          items[i].classList.add('in-view')\n        }\n      }\n    }\n\n    // listen for events\n    window.addEventListener('load', callbackFunc)\n    window.addEventListener('resize', callbackFunc)\n    window.addEventListener('scroll', callbackFunc)\n  }, [])\n\n  return (\n    <section className=\"intro fancy circle-in\">\n      <div className=\"logo\">\n        <img src=\"/assets/images/logo.png\" alt=\"Solcoins Solanart NFT Logo\" />\n      </div>\n      <div className=\"limited flex flex-justify\">\n        <div className=\"mint-info-container\">\n          <h1 className=\"mintH1\">Mint Now!</h1>\n\n          {wallet && (\n            <div className=\"mint-info\">\n              <div>\n                Wallet: <span>{shortenAddress(wallet.publicKey.toBase58() || '')}</span>\n              </div>\n\n              <div>\n                Balance: <span>{(balance || 0).toLocaleString()} SOL</span>\n              </div>\n\n              <div>\n                Total Available: <span>{itemsAvailable}</span>\n              </div>\n\n              <div>\n                Redeemed: <span>{itemsRedeemed}</span>\n              </div>\n\n              <div>\n                Remaining: <span>{itemsRemaining}</span>\n              </div>\n            </div>\n          )}\n\n          <ConnectButton id=\"wallet-connect\">Connect Wallet</ConnectButton>\n\n          <MintContainer>\n            {!wallet ? (\n              <button tabIndex={0} type=\"button\" className=\"go-home-btn\" onClick={() => document.getElementById('wallet-connect')?.click()}>\n                Connect Wallet\n              </button>\n            ) : (\n              <button disabled={isSoldOut || isMinting || !isActive} onClick={onMint} id=\"mint-nft\" className=\"go-home-btn mint-btn\">\n                {isSoldOut ? (\n                  'SOLD OUT'\n                ) : isActive ? (\n                  isMinting ? (\n                    <>\nPLEASE WAIT <span className=\"dot-flashing\"></span>\n                      </>\n                  ) : (\n                    'MINT A SOLCOIN'      \n                  )\n                ) : (\n                  <Countdown\n                    date={startDate}\n                    onMount={({ completed }) => completed && setIsActive(true)}\n                    onComplete={() => setIsActive(true)}\n                    renderer={renderCounter}\n                  />\n                )}\n              </button>\n            )}\n          </MintContainer>\n\n          <Snackbar\n            open={alertState.open}\n            autoHideDuration={6000}\n            onClose={() => setAlertState({ ...alertState, open: false })}\n          >\n            <Alert onClose={() => setAlertState({ ...alertState, open: false })} severity={alertState.severity}>\n              {alertState.message}\n            </Alert>\n          </Snackbar>\n        </div>\n        <div className=\"example hop-in\">\n          <img src=\"/assets/images/examples/mint.png\" alt=\"Solcoins Solana art NFT Example\" />\n        </div>\n      </div>\n    </section>\n  )\n}\n\ninterface AlertState {\n  open: boolean\n  message: string\n  severity: 'success' | 'info' | 'warning' | 'error' | undefined\n}\n\nconst renderCounter = ({ days, hours, minutes, seconds, completed }: any) => {\n  return (\n    <CounterText>\n      {hours + (days || 0) * 24} hours, {minutes} minutes, {seconds} seconds\n    </CounterText>\n  )\n}\n\nexport default Home\n","import './App.css'\nimport { useMemo } from 'react'\n\nimport { Routes, Route } from 'react-router-dom'\n\nimport Home from './Home'\nimport Mint from './Mint'\n\nimport * as anchor from '@project-serum/anchor'\nimport { clusterApiUrl } from '@solana/web3.js'\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base'\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from '@solana/wallet-adapter-wallets'\n\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react'\n\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui'\nimport { createTheme, ThemeProvider } from '@material-ui/core'\n\nconst treasury = new anchor.web3.PublicKey(process.env.REACT_APP_TREASURY_ADDRESS!)\n\nconst config = new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_CONFIG!)\n\nconst candyMachineId = new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID!)\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!\nconst connection = new anchor.web3.Connection(rpcHost)\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10)\n\nconst txTimeout = 30000 // milliseconds (confirm this works for your project)\n\nconst theme = createTheme({\n  palette: {\n    type: 'dark',\n  },\n  overrides: {\n    MuiButtonBase: {\n      root: {\n        justifyContent: 'flex-start',\n      },\n    },\n    MuiButton: {\n      root: {\n        textTransform: undefined,\n        padding: '12px 16px',\n      },\n      startIcon: {\n        marginRight: 8,\n      },\n      endIcon: {\n        marginLeft: 8,\n      },\n    },\n  },\n})\n\nconst App = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), [])\n\n  const wallets = useMemo(\n    () => [\n      getPhantomWallet(),\n      getSlopeWallet(),\n      getSolflareWallet(),\n      getSolletWallet({ network }),\n      getSolletExtensionWallet({ network }),\n    ],\n    []\n  )\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ConnectionProvider endpoint={endpoint}>\n        <WalletProvider wallets={wallets} autoConnect={true}>\n          <WalletDialogProvider>\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route\n                path=\"/mint\"\n                element={\n                  <Mint\n                    candyMachineId={candyMachineId}\n                    config={config}\n                    connection={connection}\n                    startDate={startDateSeed}\n                    treasury={treasury}\n                    txTimeout={txTimeout}\n                  />\n                }\n              />\n            </Routes>\n          </WalletDialogProvider>\n        </WalletProvider>\n      </ConnectionProvider>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter, NavLink } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename=\"/\">\n      <>\n        <header>\n          <div className=\"limited flex flex-justify\">\n            <div className=\"socials flex-center\">\n              <a target=\"_blank\" rel=\"noreferrer\" href=\"https://twitter.com/SOLCOINS_IO\">\n                <img src=\"/assets/images/socials/twitter.svg\" alt=\"Solcoins NFT Twitter\" />\n              </a>\n              <a target=\"_blank\" rel=\"noreferrer\" href=\"https://discord.com/invite/45XTxdHzzB\">\n                <img src=\"/assets/images/socials/discord.svg\" alt=\"Solcoins NFT Discord\" />\n              </a>\n            </div>\n            <div className=\"menu flex-center\">\n              <NavLink to=\"/\">\n                {/* alt=\"Home\" */}\n                Home\n              </NavLink>\n              <NavLink to=\"/mint\">\n                {/* alt=\"Home\" */}\n                Mint\n              </NavLink>\n              <a href=\"https://gleam.io/1z5FH/solcoins-treasure-hunt\">\n                {/* alt=\"Solcoins Play-To-Earn Treasure Hunt\" */}\n                Treasure Hunt\n              </a>\n            </div>\n          </div>\n        </header>\n\n        <App />\n\n        <section className=\"gleam\">\n          <div className=\"flex-justify\">\n            <a className=\"e-widget no-button\" href=\"https://gleam.io/1z5FH/solcoins-treasure-hunt\" rel=\"nofollow\">\n              Solcoins Treasure Hunt\n            </a>\n          </div>\n        </section>\n\n        <footer>\n          <div className=\"logo\">\n            <img src=\"/assets/images/logo.png\" alt=\"Solcoins Logo play-to-earn\" />\n          </div>\n          <div className=\"limited flex flex-justify\">\n            <div className=\"menu flex-center\">\n              <span id=\"copyright\">© 2021 Solcoins</span>\n            </div>\n            <div className=\"socials flex\">\n              <a target=\"_blank\" rel=\"noreferrer\" href=\"https://twitter.com/SOLCOINS_IO\">\n                <img src=\"/assets/images/socials/twitter.svg\" alt=\"solcoins twitter\" />\n              </a>\n              <a target=\"_blank\" rel=\"noreferrer\" href=\"https://discord.com/invite/45XTxdHzzB\">\n                <img src=\"/assets/images/socials/discord.svg\" alt=\"solcoins discord\" />\n              </a>\n            </div>\n          </div>\n        </footer>\n      </>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}